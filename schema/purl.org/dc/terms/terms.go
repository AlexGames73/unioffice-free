//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_bf "encoding/xml";_c "fmt";_g "github.com/AlexGames73/unioffice-free";_cc "github.com/AlexGames73/unioffice-free/common/logger";_e "github.com/AlexGames73/unioffice-free/schema/purl.org/dc/elements";);type ElementsAndRefinementsGroupChoice struct{Any []*_e .Any ;};func (_bad *W3CDTF )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_affe ,_cdff :=d .Token ();if _cdff !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_cdff );};if _eed ,_cbfb :=_affe .(_bf .EndElement );_cbfb &&_eed .Name ==start .Name {break ;};};return nil ;};func (_adba *RFC1766 )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func (_edf *Point )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_efd *ISO3166 )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_de *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _bge ,_ccf :=range _de .Choice {if _dbc :=_ccf .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_bge ));_dbc !=nil {return _dbc ;};};return nil ;};func (_gdbe *UDC )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_dbd ,_becg :=d .Token ();if _becg !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_becg );};if _ddf ,_cfa :=_dbd .(_bf .EndElement );_cfa &&_ddf .Name ==start .Name {break ;};};return nil ;};func (_fg *DCMIType )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};type RFC3066 struct{};

// Validate validates the LCSH and its children
func (_eec *LCSH )Validate ()error {return _eec .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func NewRFC3066 ()*RFC3066 {_eac :=&RFC3066 {};return _eac };

// Validate validates the MESH and its children
func (_gfef *MESH )Validate ()error {return _gfef .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_a *Box )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// Validate validates the DDC and its children
func (_ae *DDC )Validate ()error {return _ae .ValidateWithPath ("\u0044\u0044\u0043")};

// Validate validates the TGN and its children
func (_fef *TGN )Validate ()error {return _fef .ValidateWithPath ("\u0054\u0047\u004e")};func (_ccd *DCMIType )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_gf ,_bfgc :=d .Token ();if _bfgc !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_bfgc );};if _ccb ,_cg :=_gf .(_bf .EndElement );_cg &&_ccb .Name ==start .Name {break ;};};return nil ;};type RFC1766 struct{};

// Validate validates the ISO639_2 and its children
func (_ce *ISO639_2 )Validate ()error {return _ce .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};func (_bgee *RFC3066 )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_dbg ,_bec :=d .Token ();if _bec !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_bec );};if _fee ,_ade :=_dbg .(_bf .EndElement );_ade &&_fee .Name ==start .Name {break ;};};return nil ;};type DCMIType struct{};func NewPoint ()*Point {_afda :=&Point {};return _afda };type ISO3166 struct{};func (_eg *ElementOrRefinementContainer )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _eg .Choice !=nil {for _ ,_db :=range _eg .Choice {_db .MarshalXML (e ,_bf .StartElement {});};};e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_edfe *Point )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_ccc *DDC )ValidateWithPath (path string )error {return nil };func (_efa *IMT )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_gg ,_cda :=d .Token ();if _cda !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_cda );};if _aga ,_ccdf :=_gg .(_bf .EndElement );_ccdf &&_aga .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_gff *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _gbg ,_afd :=range _gff .Choice {if _be :=_afd .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_gbg ));_be !=nil {return _be ;};};return nil ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_bab *UDC )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_aea *LCC )ValidateWithPath (path string )error {return nil };type Point struct{};func (_bafg *MESH )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func (_age *TGN )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_afb ,_abc :=d .Token ();if _abc !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_abc );};if _abb ,_add :=_afb .(_bf .EndElement );_add &&_abb .Name ==start .Name {break ;};};return nil ;};

// Validate validates the W3CDTF and its children
func (_afa *W3CDTF )Validate ()error {return _afa .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func (_bda *URI )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func NewDCMIType ()*DCMIType {_ee :=&DCMIType {};return _ee };

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_eef *ElementsAndRefinementsGroupChoice )Validate ()error {return _eef .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};type URI struct{};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_ad *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _dgg ,_ebc :=range _ad .Any {if _cbf :=_ebc .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_dgg ));_cbf !=nil {return _cbf ;};};return nil ;};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_gfea *RFC1766 )ValidateWithPath (path string )error {return nil };func (_baa *LCSH )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func NewDDC ()*DDC {_gb :=&DDC {};return _gb };

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_ccccb *URI )ValidateWithPath (path string )error {return nil };func (_bb *DDC )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func (_dde *Point )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_cge ,_eeb :=d .Token ();if _eeb !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_eeb );};if _ga ,_cf :=_cge .(_bf .EndElement );_cf &&_ga .Name ==start .Name {break ;};};return nil ;};func (_fed *URI )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_eea ,_cbfd :=d .Token ();if _cbfd !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_cbfd );};if _eda ,_cfe :=_eea .(_bf .EndElement );_cfe &&_eda .Name ==start .Name {break ;};};return nil ;};func (_gfb *Period )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// Validate validates the Period and its children
func (_ff *Period )Validate ()error {return _ff .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_fbe *RFC3066 )ValidateWithPath (path string )error {return nil };func NewLCSH ()*LCSH {_dcd :=&LCSH {};return _dcd };

// Validate validates the Point and its children
func (_acfe *Point )Validate ()error {return _acfe .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_egeg *LCSH )ValidateWithPath (path string )error {return nil };func (_dae *ISO639_2 )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_dd *ElementOrRefinementContainer )Validate ()error {return _dd .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_d :=&ElementOrRefinementContainer {};return _d ;};func NewISO639_2 ()*ISO639_2 {_afdb :=&ISO639_2 {};return _afdb };func (_geb *LCC )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_bagb ,_fea :=d .Token ();if _fea !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_fea );};if _geg ,_gde :=_bagb .(_bf .EndElement );_gde &&_geg .Name ==start .Name {break ;};};return nil ;};type TGN struct{};

// Validate validates the Box and its children
func (_bga *Box )Validate ()error {return _bga .ValidateWithPath ("\u0042\u006f\u0078")};type MESH struct{};type Period struct{};func (_gba *Period )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_dce ,_gfd :=d .Token ();if _gfd !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_gfd );};if _agab ,_bdb :=_dce .(_bf .EndElement );_bdb &&_agab .Name ==start .Name {break ;};};return nil ;};func (_gffg *RFC3066 )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO3166 and its children
func (_fe *ISO3166 )Validate ()error {return _fe .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type DDC struct{};func NewISO3166 ()*ISO3166 {_ge :=&ISO3166 {};return _ge };type Box struct{};func (_ecg *LCSH )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_acfd ,_fgd :=d .Token ();if _fgd !=nil {return _c .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_fgd );};if _gea ,_def :=_acfd .(_bf .EndElement );_def &&_gea .Name ==start .Name {break ;};};return nil ;};func (_cba *TGN )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func (_acf *ElementsAndRefinementsGroupChoice )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {if _acf .Any !=nil {_ba :=_bf .StartElement {Name :_bf .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_edd :=range _acf .Any {e .EncodeElement (_edd ,_ba );};};return nil ;};func (_fgf *ElementsAndRefinementsGroup )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_dfa :for {_fd ,_cd :=d .Token ();if _cd !=nil {return _cd ;};switch _ega :=_fd .(type ){case _bf .StartElement :switch _ega .Name {case _bf .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bce :=NewElementsAndRefinementsGroupChoice ();if _dgb :=d .DecodeElement (&_bce .Any ,&_ega );_dgb !=nil {return _dgb ;};_fgf .Choice =append (_fgf .Choice ,_bce );default:_cc .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_ega .Name );if _gfeg :=d .Skip ();_gfeg !=nil {return _gfeg ;};};case _bf .EndElement :break _dfa ;case _bf .CharData :};};return nil ;};func (_bgc *W3CDTF )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC1766 and its children
func (_afc *RFC1766 )Validate ()error {return _afc .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};

// Validate validates the IMT and its children
func (_ggd *IMT )Validate ()error {return _ggd .ValidateWithPath ("\u0049\u004d\u0054")};func (_ddeg *UDC )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_ac *DCMIType )ValidateWithPath (path string )error {return nil };func NewMESH ()*MESH {_dga :=&MESH {};return _dga };func (_fdc *RFC1766 )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_egc ,_dbb :=d .Token ();if _dbb !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_dbb );};if _bgaf ,_acfc :=_egc .(_bf .EndElement );_acfc &&_bgaf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the RFC3066 and its children
func (_cccc *RFC3066 )Validate ()error {return _cccc .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};func NewUDC ()*UDC {_cbd :=&UDC {};return _cbd };

// Validate validates the URI and its children
func (_bdg *URI )Validate ()error {return _bdg .ValidateWithPath ("\u0055\u0052\u0049")};func NewURI ()*URI {_eeba :=&URI {};return _eeba };func (_bfcg *ISO639_2 )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_dcf ,_abg :=d .Token ();if _abg !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_abg );};if _bd ,_bggb :=_dcf .(_bf .EndElement );_bggb &&_bd .Name ==start .Name {break ;};};return nil ;};func NewIMT ()*IMT {_affa :=&IMT {};return _affa };func NewTGN ()*TGN {_ccg :=&TGN {};return _ccg };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_fce *TGN )ValidateWithPath (path string )error {return nil };func (_ebe *MESH )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_edb ,_gdb :=d .Token ();if _gdb !=nil {return _c .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_gdb );};if _bgea ,_cdab :=_edb .(_bf .EndElement );_cdab &&_bgea .Name ==start .Name {break ;};};return nil ;};func NewPeriod ()*Period {_efdf :=&Period {};return _efdf };func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_aa :=&ElementsAndRefinementsGroup {};return _aa ;};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_bgef :=&ElementsAndRefinementsGroupChoice {};return _bgef ;};func (_bba *IMT )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func (_dg *ElementOrRefinementContainer )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_fc :for {_bbg ,_fcd :=d .Token ();if _fcd !=nil {return _fcd ;};switch _ea :=_bbg .(type ){case _bf .StartElement :switch _ea .Name {case _bf .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bfc :=NewElementsAndRefinementsGroupChoice ();if _ege :=d .DecodeElement (&_bfc .Any ,&_ea );_ege !=nil {return _ege ;};_dg .Choice =append (_dg .Choice ,_bfc );default:_cc .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_ea .Name );if _ef :=d .Skip ();_ef !=nil {return _ef ;};};case _bf .EndElement :break _fc ;case _bf .CharData :};};return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_ddg *W3CDTF )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_bed *MESH )ValidateWithPath (path string )error {return nil };func (_bfg *Box )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_f ,_ca :=d .Token ();if _ca !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_ca );};if _bg ,_bgd :=_f .(_bf .EndElement );_bgd &&_bg .Name ==start .Name {break ;};};return nil ;};type UDC struct{};func NewLCC ()*LCC {_adb :=&LCC {};return _adb };

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_bgg *Box )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_ead *Period )ValidateWithPath (path string )error {return nil };func (_fcf *ISO3166 )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_cbe ,_efc :=d .Token ();if _efc !=nil {return _c .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_efc );};if _da ,_bag :=_cbe .(_bf .EndElement );_bag &&_da .Name ==start .Name {break ;};};return nil ;};func (_acb *ElementsAndRefinementsGroup )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {if _acb .Choice !=nil {for _ ,_aff :=range _acb .Choice {_aff .MarshalXML (e ,_bf .StartElement {});};};return nil ;};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_baf *IMT )ValidateWithPath (path string )error {return nil };func (_cdf *LCC )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};type W3CDTF struct{};type LCSH struct{};type ISO639_2 struct{};func NewW3CDTF ()*W3CDTF {_afgc :=&W3CDTF {};return _afgc };func NewRFC1766 ()*RFC1766 {_cfd :=&RFC1766 {};return _cfd };

// Validate validates the ElementsAndRefinementsGroup and its children
func (_acbb *ElementsAndRefinementsGroup )Validate ()error {return _acbb .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_efg *ISO639_2 )ValidateWithPath (path string )error {return nil };type IMT struct{};type LCC struct{};

// Validate validates the LCC and its children
func (_dee *LCC )Validate ()error {return _dee .ValidateWithPath ("\u004c\u0043\u0043")};

// Validate validates the UDC and its children
func (_gc *UDC )Validate ()error {return _gc .ValidateWithPath ("\u0055\u0044\u0043")};func (_ebd *ISO3166 )MarshalXML (e *_bf .Encoder ,start _bf .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_bf .EndElement {Name :start .Name });return nil ;};func NewBox ()*Box {_ed :=&Box {};return _ed };func (_gfe *DDC )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {for {_ec ,_bc :=d .Token ();if _bc !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_bc );};if _fb ,_bgf :=_ec .(_bf .EndElement );_bgf &&_fb .Name ==start .Name {break ;};};return nil ;};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};func (_cb *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_bf .Decoder ,start _bf .StartElement )error {_afg :for {_dc ,_aeg :=d .Token ();if _aeg !=nil {return _aeg ;};switch _eb :=_dc .(type ){case _bf .StartElement :switch _eb .Name {case _bf .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ab :=_e .NewAny ();if _dbcc :=d .DecodeElement (_ab ,&_eb );_dbcc !=nil {return _dbcc ;};_cb .Any =append (_cb .Any ,_ab );default:_cc .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_eb .Name );if _dgd :=d .Skip ();_dgd !=nil {return _dgd ;};};case _bf .EndElement :break _afg ;case _bf .CharData :};};return nil ;};

// Validate validates the DCMIType and its children
func (_af *DCMIType )Validate ()error {return _af .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func init (){_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_g .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};