//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_c "encoding/xml";_cf "fmt";_ed "github.com/AlexGames73/unioffice-free";_b "github.com/AlexGames73/unioffice-free/common/logger";);func NewAny ()*Any {_f :=&Any {};_f .SimpleLiteral =*NewSimpleLiteral ();return _f };

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_cb *Any )ValidateWithPath (path string )error {if _gc :=_cb .SimpleLiteral .ValidateWithPath (path );_gc !=nil {return _gc ;};return nil ;};type Any struct{SimpleLiteral };func (_gcd *ElementsGroupChoice )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_ebe :for {_aag ,_dea :=d .Token ();if _dea !=nil {return _dea ;};switch _cfb :=_aag .(type ){case _c .StartElement :switch _cfb .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dga :=NewAny ();if _fgg :=d .DecodeElement (_dga ,&_cfb );_fgg !=nil {return _fgg ;};_gcd .Any =append (_gcd .Any ,_dga );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_cfb .Name );if _fgc :=d .Skip ();_fgc !=nil {return _fgc ;};};case _c .EndElement :break _ebe ;case _c .CharData :};};return nil ;};func NewElementsGroup ()*ElementsGroup {_ga :=&ElementsGroup {};return _ga };func (_bdc *SimpleLiteral )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for {_cg ,_bee :=d .Token ();if _bee !=nil {return _cf .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_bee );};if _ead ,_bdb :=_cg .(_c .EndElement );_bdb &&_ead .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Any and its children
func (_cd *Any )Validate ()error {return _cd .ValidateWithPath ("\u0041\u006e\u0079")};

// Validate validates the ElementsGroupChoice and its children
func (_cfd *ElementsGroupChoice )Validate ()error {return _cfd .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_dcb *ElementsGroup )ValidateWithPath (path string )error {for _gda ,_cddf :=range _dcb .Choice {if _af :=_cddf .ValidateWithPath (_cf .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_gda ));_af !=nil {return _af ;};};return nil ;};func (_fa *ElementsGroupChoice )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _fa .Any !=nil {_edb :=_c .StartElement {Name :_c .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_bf :=range _fa .Any {e .EncodeElement (_bf ,_edb );};};return nil ;};func (_fgd *SimpleLiteral )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func (_ba *ElementsGroup )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_fe :for {_ad ,_bef :=d .Token ();if _bef !=nil {return _bef ;};switch _gd :=_ad .(type ){case _c .StartElement :switch _gd .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dc :=NewElementsGroupChoice ();if _ge :=d .DecodeElement (&_dc .Any ,&_gd );_ge !=nil {return _ge ;};_ba .Choice =append (_ba .Choice ,_dc );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_gd .Name );if _ec :=d .Skip ();_ec !=nil {return _ec ;};};case _c .EndElement :break _fe ;case _c .CharData :};};return nil ;};func (_eb *ElementContainer )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _eb .Choice !=nil {for _ ,_fg :=range _eb .Choice {_fg .MarshalXML (e ,_c .StartElement {});};};e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func (_be *Any )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {return _be .SimpleLiteral .MarshalXML (e ,start );};func (_d *Any )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_d .SimpleLiteral =*NewSimpleLiteral ();for {_fd ,_dg :=d .Token ();if _dg !=nil {return _cf .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_dg );};if _g ,_bg :=_fd .(_c .EndElement );_bg &&_g .Name ==start .Name {break ;};};return nil ;};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};type SimpleLiteral struct{};func NewElementsGroupChoice ()*ElementsGroupChoice {_db :=&ElementsGroupChoice {};return _db };

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_dce *ElementsGroupChoice )ValidateWithPath (path string )error {for _gec ,_bgd :=range _dce .Any {if _ffd :=_bgd .ValidateWithPath (_cf .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_gec ));_ffd !=nil {return _ffd ;};};return nil ;};func (_eg *ElementContainer )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_fc :for {_bd ,_a :=d .Token ();if _a !=nil {return _a ;};switch _bc :=_bd .(type ){case _c .StartElement :switch _bc .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_aa :=NewElementsGroupChoice ();if _df :=d .DecodeElement (&_aa .Any ,&_bc );_df !=nil {return _df ;};_eg .Choice =append (_eg .Choice ,_aa );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_bc .Name );if _ff :=d .Skip ();_ff !=nil {return _ff ;};};case _c .EndElement :break _fc ;case _c .CharData :};};return nil ;};

// Validate validates the ElementsGroup and its children
func (_acc *ElementsGroup )Validate ()error {return _acc .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func NewSimpleLiteral ()*SimpleLiteral {_dee :=&SimpleLiteral {};return _dee };

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_gf *ElementContainer )ValidateWithPath (path string )error {for _gb ,_cfa :=range _gf .Choice {if _de :=_cfa .ValidateWithPath (_cf .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_gb ));_de !=nil {return _de ;};};return nil ;};func NewElementContainer ()*ElementContainer {_cdd :=&ElementContainer {};return _cdd };

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_ae *SimpleLiteral )ValidateWithPath (path string )error {return nil };func (_ea *ElementsGroup )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _ea .Choice !=nil {for _ ,_ac :=range _ea .Choice {_ac .MarshalXML (e ,_c .StartElement {});};};return nil ;};

// Validate validates the ElementContainer and its children
func (_da *ElementContainer )Validate ()error {return _da .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};type ElementContainer struct{Choice []*ElementsGroupChoice ;};type ElementsGroupChoice struct{Any []*Any ;};

// Validate validates the SimpleLiteral and its children
func (_egd *SimpleLiteral )Validate ()error {return _egd .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};func init (){_ed .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_ed .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_ed .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_ed .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};